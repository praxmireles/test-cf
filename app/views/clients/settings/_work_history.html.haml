
.row
  .col-sm-10.col-sm-offset-1
    .panel
      .panel-header
        %span.text-md= t('layout.work_industries/Speciality')
      .panel-content.text-md{:style => "text-align:justify"}
        .row{:style => "margin:20px"}
          .col-md-12
            .row.justify-content-center{:style => "margin:0px;"}
              .col-xl-12
                %h3= t('view_clients.settings.work_industry.work_industry_speciality')
                -# = form_tag(work_industries_path, controller: :work_histories, remote: true, class: 'js-validation-material', id: 'work-industry-from') do |f|
                = form_for @positions, :url => url_for(:controller => 'work_histories', action: 'create'), method: :post do |f|
                  = hidden_field_tag :authenticity_token, form_authenticity_token

                  .row
                    .col-sm-6
                      %label{:for => "Company"}= t('view_clients.settings.work_industry.company')
                      .input-group.mb-sm
                        %span.input-group-addon.x-primary
                          %i.fa.fa-building
                        .small
                          = f.text_field :company, maxlength: 60, required: true

                    .col-sm-6
                      %label{:for => "title"}= t('view_clients.settings.work_industry.size')
                      .input-group.mb-sm
                        %span.input-group-addon.x-primary
                          %i.fa.fa-sitemap
                        .small
                          = f.select :size, collection: WorkHistory.sizes.map{|s| [s,s]}

                  .row
                    .col-sm-6
                      %label{:for => "Company"}= t('view_clients.settings.work_industry.company_url')
                      .input-group.mb-sm
                        %span.input-group-addon.x-primary
                          %i.fa.fa-building
                        .small
                          = f.url_field :company_url, maxlength: 60

                    .col-sm-6
                      %label{:for => "title"}= t('view_clients.settings.work_industry.job_title')
                      .input-group.mb-sm
                        %span.input-group-addon.x-primary
                          %i.fa.fa-pen
                        .small
                          = f.text_field :title, maxlength: 50, required: true

                  .row
                    .col-sm-11
                      %label{:for => "location"}= t('view_clients.settings.work_industry.location')
                      .input-group.mb-sm
                        %span.input-group-addon.x-primary
                          %i.fa.fa-map-marker
                        = f.text_field :location, id: "location", maxlength: 105, required: true

                  .row
                    %label.col-sm-12{:for => "example-daterange1"}= t('view_clients.settings.work_industry.enter_dates')
                  .row
                    .col-sm-12
                      .input-daterange.input-group.mb-sm.js-datepicker-enabled{"data-autoclose" => "true", "data-date-format" => "dd/mm/yyyy", "data-today-highlight" => "true", "data-week-start" => "1"}
                        %span.input-group-addon.x-primary.font-w600= t('view_clients.settings.work_industry.from')
                        #from_date
                          = f.date_field :from_date, required: true, "data-autoclose" => "true", "data-today-highlight" => "true", "data-week-start" => "1", placeholder: "mm/dd/yyyy", as: :date
                        %span.input-group-addon.x-primary.font-w600= t('view_clients.settings.work_industry.to')
                        #to_date
                          = f.date_field :to_date, "data-autoclose" => "true", "data-today-highlight" => "true", "data-week-start" => "1", placeholder: "mm/dd/yyyy", as: :date

                  .row
                    .col-sm-12
                      .checkbox-custom.checkbox-inline.checkbox-primary
                        %input.custom-control-input{:checked => "checked", :name => "current", :type => "checkbox", :id => "work_industry_present", :checked => false, value: 1}
                        = label_tag :present, t('view_clients.settings.work_industry.present'), for: "work_industry_present", :class => "check"


                  %hr
                  .row
                    .col-sm-3.col-sm-offset-8
                      = f.submit t('buttons.update') ,class: "btn btn-primary btn-wide"
:javascript
    function initAutocomplete() {
      // Create the autocomplete object, restricting the search to geographical
      // location types.
      autocomplete = new google.maps.places.Autocomplete(
          /** @type {!HTMLInputElement} */(document.getElementById('location')),
          {types: ['geocode']});

      // When the user selects an address from the dropdown, populate the address
      // fields in the form.
      autocomplete.addListener('place_changed', fillInAddress);
    }
    //TODO: FACTORIZAR
    function fillInAddress() {
      // Get the place details from the autocomplete object.
      var place = autocomplete.getPlace();
    //   var API_KEY  = "AIzaSyDlsC6-WlUgmRgSOFj6H_wCZ8O2ODB_QTY"
    //   var lat  = place.geometry.location.lat()
    //   var lng = place.geometry.location.lng()
    //   var url = "https://maps.googleapis.com/maps/api/timezone/json?location=" + lat + ","+ lng + "&timestamp=1331161200&key=" + API_KEY
    //   $.ajax({
    //     url: url,
    //     success: function(response){
          // var utc_difference = (response.rawOffset / 60) /60
          // var continent = response.timeZoneId.split("/")[0].replace("_"," ")
          // var name = response.timeZoneId.split("/")[1].replace("_"," " )

          // document.getElementById('client_timezone_utc_difference').value= utc_difference
          // document.getElementById('client_timezone_continent').value= continent
          // document.getElementById('client_timezone_name').value= name
    //     },
    //   });
    // }
    $("#work_industry_present").change(function(){
      if ($('#work_industry_present').is(':checked')) {
        $("#to_date").hide()
        $("#from_date").next("span").hide()
        $("#to_date").prop('disabled', true);
      }else{
        $("#to_date").show()
        $("#from_date").next("span").show()
        $("#to_date").prop('disabled', false);
      }
    });
%script{:src => "https://maps.googleapis.com/maps/api/js?key=AIzaSyAJZh005PH0sabRv0JhsH51pIWOqZ9NaV0&libraries=places&language=en&callback=initAutocomplete"}
